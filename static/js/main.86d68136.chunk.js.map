{"version":3,"sources":["components/Form/Form.jsx","components/Form/index.js","components/ListItem/ListItem.js","components/List/List.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialState","name","lastName","age","handle","Cat","state","onChange","e","target","value","setState","reset","onSubmitHandler","props","onSubmit","this","Object","entries","map","el","onClick","Component","Form","ListItem","item","values","List","list","App","handleSubmit","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAEMA,EAAe,CACnBC,KAAM,GACNC,SAAU,GACVC,IAAK,GACLC,OAAQ,IAGJC,E,4MACJC,M,eACKN,G,EAGLO,SAAW,SAACC,GACV,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,MAAOT,EAAf,EAAeA,KACf,EAAKU,SAAL,eAAiBV,EAAOS,K,EAG1BE,MAAQ,kBAAM,EAAKD,SAAL,eAAmBX,K,EAEjCa,gBAAkB,WAChB,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKM,S,4CAGP,WACE,IAAQL,EAAaS,KAAbT,SACR,OACE,gCACGU,OAAOC,QAAQF,KAAKV,OAAOa,KAAI,SAACC,GAAD,OAC9B,kCACGA,EAAG,GACJ,uBACEnB,KAAMmB,EAAG,GACTV,MAAOU,EAAG,GACVb,SAAUA,UAIhB,wBAAQc,QAASL,KAAKH,gBAAtB,2B,GA/BUS,aCRHC,ED+CAlB,EE9CTmB,E,4JACJ,WACE,IAAQC,EAAST,KAAKF,MAAdW,KACR,OACE,6BACGR,OAAOS,OAAOD,GAAMN,KAAI,SAACC,GAAD,OACvB,4BAAIA,a,GANSE,aAaRE,ICZFG,EAAb,4JACE,WACE,IAAQC,EAASZ,KAAKF,MAAdc,KACR,OACE,qCACE,4CACA,6BACGA,EAAKT,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAAUK,KAAML,gBAR5B,GAA0BE,aCCpBO,E,4MACJvB,MAAQ,CACNsB,KAAM,I,EAGRE,aAAe,SAACL,GACd,EAAKd,UAAS,SAACoB,GAAD,MAAgB,CAC5BH,KAAK,GAAD,mBAAMG,EAAUH,MAAhB,CAAsBH,S,4CAI9B,WACE,IACWG,EAEPZ,KAFFV,MAASsB,KACTE,EACEd,KADFc,aAEF,OACE,qCACE,cAAC,EAAD,CAAMf,SAAUe,IAChB,cAAC,EAAKH,KAAN,CAAWC,KAAMA,W,GAnBPN,aAyBHO,ICjBAG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86d68136.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  lastName: '',\r\n  age: '',\r\n  handle: '',\r\n};\r\n\r\nclass Cat extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => this.setState({ ...initialState });\r\n\r\n  onSubmitHandler = () => {\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { onChange } = this;\r\n    return (\r\n      <div>\r\n        {Object.entries(this.state).map((el) => (\r\n          <label>\r\n            {el[0]}\r\n            <input\r\n              name={el[0]}\r\n              value={el[1]}\r\n              onChange={onChange}\r\n            />\r\n          </label>\r\n        ))}\r\n        <button onClick={this.onSubmitHandler}>\r\n          submit\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cat;\r\n","import Form from './Form.jsx';\r\nexport default Form;","import { Component } from 'react';\r\n\r\nclass ListItem extends Component {\r\n  render() {\r\n    const { item } = this.props;\r\n    return (\r\n      <li>\r\n        {Object.values(item).map((el) => (\r\n          <p>{el}</p>\r\n        ))}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListItem;\r\n","import { Component } from 'react';\r\nimport ListItem from '../ListItem';\r\n\r\nexport class List extends Component {\r\n  render() {\r\n    const { list } = this.props;\r\n    return (\r\n      <>\r\n        <h2>Users List</h2>\r\n        <ul>\r\n          {list.map((el) => (\r\n            <ListItem item={el} />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Form from './components/Form';\nimport { List } from './components/List';\n\nclass App extends Component {\n  state = {\n    list: [],\n  };\n\n  handleSubmit = (item) => {\n    this.setState((prevState) => ({\n      list: [...prevState.list, item],\n    }));\n  };\n\n  render() {\n    const {\n      state: { list },\n      handleSubmit,\n    } = this;\n    return (\n      <>\n        <Form onSubmit={handleSubmit} />\n        <List.List list={list} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}